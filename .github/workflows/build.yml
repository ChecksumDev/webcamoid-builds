name: Webcamoid CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 0 * * *'

env:
  QTVER: 6.7.2
  NJOBS: 4
  QTIFWVER: 4.8.0
  APPIMAGEVER: continuous
  NSIS_VERSION: 3.10
  HOMEBREW_PATH: /usr/local
  FFMPEG_VERSION: 7.0.1
  GSTREAMER_VERSION: 1.24.5
  CMAKE_GENERATOR: Visual Studio 17 2022

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: Ubuntu x86_64
            dockerimg: amd64/ubuntu:rolling
            compiler: gcc
            script: linux-ubuntu
          - os: macos-14
            name: macOS
            script: mac
          - os: windows-latest
            name: Windows MSVC
            script: windows-msvc
          - os: windows-latest
            name: Windows MSYS
            target_arch: x86_64
            compiler: gcc
            script: windows-msys

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up MSYS2 (Windows MSYS only)
      uses: msys2/setup-msys2@v2
      if: matrix.script == 'windows-msys'
      with:
        update: true
        install: >-
          ccache clang cmake git make pkgconf python3
          mingw-w64-${{ matrix.target_arch }}-{binutils,ccache,clang,cmake,ffmpeg,pkgconf,qt6,vlc,SDL2,gst-plugins-base,gst-plugins-good,portaudio}

    - name: Install dependencies
      run: |
        chmod +x ports/ci/${{ matrix.script }}/install_deps.sh
        ./ports/ci/${{ matrix.script }}/install_deps.sh
      shell: ${{ matrix.script == 'windows-msvc' && 'cmd' || 'bash' }}

    - name: Build
      run: |
        ${{ matrix.script == 'windows-msvc' && './ports/ci/${{ matrix.script }}/build.bat' || 'chmod +x ports/ci/${{ matrix.script }}/build.sh && ./ports/ci/${{ matrix.script }}/build.sh' }}
      shell: ${{ matrix.script == 'windows-msvc' && 'cmd' || (matrix.script == 'windows-msys' && 'msys2 {0}' || 'bash') }}

    - name: Deploy
      run: |
        ${{ matrix.script == 'windows-msvc' && './ports/ci/${{ matrix.script }}/deploy.bat' || 'chmod +x ports/ci/${{ matrix.script }}/deploy.sh && ./ports/ci/${{ matrix.script }}/deploy.sh' }}
      shell: ${{ matrix.script == 'windows-msvc' && 'cmd' || (matrix.script == 'windows-msys' && 'msys2 {0}' || 'bash') }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webcamoid-${{ matrix.name }}
        path: webcamoid-packages/**/*

  release:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "build-${GITHUB_SHA::8}" \
          --title "Webcamoid Build - ${GITHUB_SHA::8}" \
          --notes "Automated build from commit ${GITHUB_SHA}. This is a development build and may not be stable." \
          --prerelease \
          webcamoid-*/**/*
